<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>note - 分类 - This is DYH</title>
        <link>https://dyhgo.github.io/categories/note/</link>
        <description>note - 分类 - This is DYH</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>244882973@qq.com (DYH)</managingEditor>
            <webMaster>244882973@qq.com (DYH)</webMaster><lastBuildDate>Wed, 01 May 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://dyhgo.github.io/categories/note/" rel="self" type="application/rss+xml" /><item>
    <title>git补充2</title>
    <link>https://dyhgo.github.io/posts/git%E8%A1%A5%E5%85%852/</link>
    <pubDate>Wed, 01 May 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/git%E8%A1%A5%E5%85%852/</guid>
    <description><![CDATA[如何更优雅地使用git，包含merge，pull，合并commit 实验工具是gitlab pre 在gitlab上登录，只能免费试用一个月 本地mer]]></description>
</item><item>
    <title>C&#43;&#43; IPC</title>
    <link>https://dyhgo.github.io/posts/c-_ipc/</link>
    <pubDate>Tue, 16 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/c-_ipc/</guid>
    <description><![CDATA[管道 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include &lt;iostream&gt; #include &lt;unistd.h&gt; int main() { int fd[2]; if (pipe(fd) == -1) { perror(&#34;pipe&#34;); return 1; } // create child process pid_t pid = fork(); char buf[256]; if (pid == -1) { perror(&#34;fork&#34;); return 1; } else if (pid]]></description>
</item><item>
    <title>C&#43;&#43;实现XXX</title>
    <link>https://dyhgo.github.io/posts/c-%E5%AE%9E%E7%8E%B0xxx/</link>
    <pubDate>Thu, 22 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/c-%E5%AE%9E%E7%8E%B0xxx/</guid>
    <description><![CDATA[智能指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66]]></description>
</item><item>
    <title>docker2</title>
    <link>https://dyhgo.github.io/posts/docker2/</link>
    <pubDate>Thu, 11 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/docker2/</guid>
    <description><![CDATA[参考链接 Containerize an application 构建应用的镜像 编写Dockerfile，构建镜像（假设镜像名叫getting-started） 1 docker build -t getting-started . 根据镜像创建容器 1 docker]]></description>
</item><item>
    <title>docker</title>
    <link>https://dyhgo.github.io/posts/docker/</link>
    <pubDate>Tue, 26 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/docker/</guid>
    <description><![CDATA[参考资料 参考教程 docker的三个重要概念 image：镜像，就是各种环境的集合 container：由镜像生成一个一个的容器，是镜像的实例化 d]]></description>
</item><item>
    <title>C&#43;&#43;互斥锁</title>
    <link>https://dyhgo.github.io/posts/c-%E4%BA%92%E6%96%A5%E9%94%81/</link>
    <pubDate>Mon, 25 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/c-%E4%BA%92%E6%96%A5%E9%94%81/</guid>
    <description><![CDATA[std::mutex 最简单的互斥锁 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 // mutex example #include &lt;iostream&gt; // std::cout #include &lt;thread&gt; // std::thread #include &lt;mutex&gt; // std::mutex std::mutex mtx; // mutex for critical section void print_block (int n, char c) { // critical section (exclusive access to std::cout signaled]]></description>
</item><item>
    <title>C&#43;&#43;类继承和可见性</title>
    <link>https://dyhgo.github.io/posts/c-%E7%B1%BB%E7%BB%A7%E6%89%BF%E5%92%8C%E5%8F%AF%E8%A7%81%E6%80%A7/</link>
    <pubDate>Mon, 25 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/c-%E7%B1%BB%E7%BB%A7%E6%89%BF%E5%92%8C%E5%8F%AF%E8%A7%81%E6%80%A7/</guid>
    <description><![CDATA[三种继承方式，是否真正继承了，子类可访问吗，外部可访问吗 三种可见性，类自己可访问吗，外部可访问吗 继承默认是private继承 继承和可见性问题]]></description>
</item><item>
    <title>protobuf</title>
    <link>https://dyhgo.github.io/posts/protobuf/</link>
    <pubDate>Wed, 23 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/protobuf/</guid>
    <description><![CDATA[protobuf是一个类似于用来定义网络传输过程中数据包格式的东西，有点像json 它可以被序列化和反序列化，从而用于传输 参考链接 它的格式类似]]></description>
</item><item>
    <title>gflags</title>
    <link>https://dyhgo.github.io/posts/gflags/</link>
    <pubDate>Tue, 22 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/gflags/</guid>
    <description><![CDATA[文档链接 gflags相当于代码中的常量 gflags读取命令行的flags，然后修改代码中相应名字的“常量” 主要有三个函数 DEFINE_xxx]]></description>
</item><item>
    <title>git补充</title>
    <link>https://dyhgo.github.io/posts/git%E8%A1%A5%E5%85%85/</link>
    <pubDate>Tue, 22 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/git%E8%A1%A5%E5%85%85/</guid>
    <description><![CDATA[参考资料 问题 如果已经推到远程仓库，该怎么撤销 其他 从工作目录git add提交到暂存区后，想撤销 注意如果在工作目录创建文件，撤销操作只是不跟踪该]]></description>
</item></channel>
</rss>

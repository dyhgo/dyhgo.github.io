<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>problemlist - 分类 - This is DYH</title>
        <link>https://dyhgo.github.io/categories/problemlist/</link>
        <description>problemlist - 分类 - This is DYH</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>244882973@qq.com (DYH)</managingEditor>
            <webMaster>244882973@qq.com (DYH)</webMaster><lastBuildDate>Sun, 24 Jul 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://dyhgo.github.io/categories/problemlist/" rel="self" type="application/rss+xml" /><item>
    <title>剑指offer</title>
    <link>https://dyhgo.github.io/%E5%89%91%E6%8C%87offer/</link>
    <pubDate>Sun, 24 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/%E5%89%91%E6%8C%87offer/</guid>
    <description><![CDATA[在leetcode平台上做一下剑指offer的题，不定时更新 03 数组中重复的数字 考点 easy 模拟 题意 题链 找出数组中任一重复的数 题解 1 2 3 4 5 6 7 8 9]]></description>
</item><item>
    <title>每日一题 (CF)</title>
    <link>https://dyhgo.github.io/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-cf/</link>
    <pubDate>Sat, 02 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-cf/</guid>
    <description><![CDATA[扫描线 题意 题链 给N个区间，N&lt;=2e5，区间长度最大1e9，对于每个区间，区间里面的每个数+1，求数字分别为1,2,3&hellip;]]></description>
</item><item>
    <title>每日一题 (LeetCode)</title>
    <link>https://dyhgo.github.io/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode/</link>
    <pubDate>Sat, 02 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-leetcode/</guid>
    <description><![CDATA[在这篇文章下更新LeetCode的每日一题，之所以选择LeetCode，是因为好像只有它有每日一题版块，每日一题并不是为了提高编程水平，而是]]></description>
</item><item>
    <title>9th hhucpc (Senior)</title>
    <link>https://dyhgo.github.io/9th-hhucpcsenior/</link>
    <pubDate>Wed, 09 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/9th-hhucpcsenior/</guid>
    <description><![CDATA[u1s1,zyyyyy出的题目真的好好，补题的过程学到了好多（好菜啊o(╥﹏╥)o 题目链接 只贴了代码，题解参考此处 A 签到 1 2 3 4 5 6 7 8 9 10]]></description>
</item><item>
    <title>无聊的做题记录</title>
    <link>https://dyhgo.github.io/%E6%97%A0%E8%81%8A%E7%9A%84%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Sun, 06 Sep 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/%E6%97%A0%E8%81%8A%E7%9A%84%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[数学公式 题目 题解 错排公式 Dn = floor(n!/e + 0.5) = (n - 1) * (Dn-1 + Dn-2) D1 = 0 , D2 = 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 //457ms/1000ms 488k/32768k #include &#34;bits/stdc++.h&#34; using namespace std; using ll = long long; const ll mod = 998244353; int main()]]></description>
</item><item>
    <title>某不科学的暑假做题记录</title>
    <link>https://dyhgo.github.io/%E6%9F%90%E4%B8%8D%E7%A7%91%E5%AD%A6%E7%9A%84%E6%9A%91%E5%81%87%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Sat, 04 Jul 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/%E6%9F%90%E4%B8%8D%E7%A7%91%E5%AD%A6%E7%9A%84%E6%9A%91%E5%81%87%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[简单思维 题目 题解 直接法，注意数组大小爆long long 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include&lt;bits/stdc++.h&gt; using ll = long long; const ll mod = 1e6+3; ll fac[mod+2]; int main(){ fac[0] = 1LL; fac[1] = 1LL; for(ll i=2;i&lt;mod+2;i++){ fac[i] = i*fac[i-1]; fac[i]]]></description>
</item><item>
    <title>每日一题 (X)</title>
    <link>https://dyhgo.github.io/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-x/</link>
    <pubDate>Mon, 08 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98-x/</guid>
    <description><![CDATA[堆 贪心 题目 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include&lt;bits/stdc++.h&gt; using namespace std; using ll = long long; ll n; struct p{ ll v,s; }ps[100005]; bool cmp(p a,p b){return a.s&gt;b.s;} priority_queue&lt;ll , vector&lt;ll&gt; , greater&lt;ll&gt; &gt; pq; int main(){ cin&gt;&gt;n; for(ll i=0;i&lt;n;i++) cin&gt;&gt;ps[i].v&gt;&gt;ps[i].s; sort(ps,ps+n,cmp);]]></description>
</item></channel>
</rss>

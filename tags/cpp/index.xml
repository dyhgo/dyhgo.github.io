<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>cpp - 标签 - This is DYH</title>
        <link>https://dyhgo.github.io/tags/cpp/</link>
        <description>cpp - 标签 - This is DYH</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>244882973@qq.com (DYH)</managingEditor>
            <webMaster>244882973@qq.com (DYH)</webMaster><lastBuildDate>Tue, 16 Apr 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://dyhgo.github.io/tags/cpp/" rel="self" type="application/rss+xml" /><item>
    <title>C&#43;&#43; IPC</title>
    <link>https://dyhgo.github.io/c-_ipc/</link>
    <pubDate>Tue, 16 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/c-_ipc/</guid>
    <description><![CDATA[管道 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include &lt;iostream&gt; #include &lt;unistd.h&gt; int main() { int fd[2]; if (pipe(fd) == -1) { perror(&#34;pipe&#34;); return 1; } // create child process pid_t pid = fork(); char buf[256]; if (pid == -1) { perror(&#34;fork&#34;); return 1; } else if (pid]]></description>
</item><item>
    <title>C&#43;&#43;实现XXX</title>
    <link>https://dyhgo.github.io/c-%E5%AE%9E%E7%8E%B0xxx/</link>
    <pubDate>Thu, 22 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/c-%E5%AE%9E%E7%8E%B0xxx/</guid>
    <description><![CDATA[智能指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66]]></description>
</item><item>
    <title>C&#43;&#43;互斥锁</title>
    <link>https://dyhgo.github.io/c-%E4%BA%92%E6%96%A5%E9%94%81/</link>
    <pubDate>Mon, 25 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/c-%E4%BA%92%E6%96%A5%E9%94%81/</guid>
    <description><![CDATA[std::mutex 最简单的互斥锁 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 // mutex example #include &lt;iostream&gt; // std::cout #include &lt;thread&gt; // std::thread #include &lt;mutex&gt; // std::mutex std::mutex mtx; // mutex for critical section void print_block (int n, char c) { // critical section (exclusive access to std::cout signaled]]></description>
</item><item>
    <title>C&#43;&#43;类继承和可见性</title>
    <link>https://dyhgo.github.io/c-%E7%B1%BB%E7%BB%A7%E6%89%BF%E5%92%8C%E5%8F%AF%E8%A7%81%E6%80%A7/</link>
    <pubDate>Mon, 25 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/c-%E7%B1%BB%E7%BB%A7%E6%89%BF%E5%92%8C%E5%8F%AF%E8%A7%81%E6%80%A7/</guid>
    <description><![CDATA[三种继承方式，是否真正继承了，子类可访问吗，外部可访问吗 三种可见性，类自己可访问吗，外部可访问吗 继承默认是private继承 继承和可见性问题]]></description>
</item><item>
    <title>Learning CPP</title>
    <link>https://dyhgo.github.io/learning-cpp/</link>
    <pubDate>Wed, 09 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/learning-cpp/</guid>
    <description><![CDATA[Introduction 学习一下c++ 教程视频地址，搬运自youtube 个人认为是一个非常不错的c++教程 空着的待补 How C++ works pre-process compile link Variables Functions Header Files 当我们需要在cpp文件中用]]></description>
</item><item>
    <title>9th hhucpc (Senior)</title>
    <link>https://dyhgo.github.io/9th-hhucpcsenior/</link>
    <pubDate>Wed, 09 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/9th-hhucpcsenior/</guid>
    <description><![CDATA[u1s1,zyyyyy出的题目真的好好，补题的过程学到了好多（好菜啊o(╥﹏╥)o 题目链接 只贴了代码，题解参考此处 A 签到 1 2 3 4 5 6 7 8 9 10]]></description>
</item><item>
    <title>Codeforces Round #688 (Div. 2) A~D</title>
    <link>https://dyhgo.github.io/codeforces-round-688-div.-2-a~d/</link>
    <pubDate>Sat, 05 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/codeforces-round-688-div.-2-a~d/</guid>
    <description><![CDATA[A. Cancel the Trains 题意 给一个铁路网，和每个火车所在的铁路（都在起点），每一时刻走一格，问有几辆车会相撞 题解 编号相同的横向和列向火车会相撞 1 2 3 4 5 6 7]]></description>
</item><item>
    <title>abc184</title>
    <link>https://dyhgo.github.io/abc184/</link>
    <pubDate>Wed, 02 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/abc184/</guid>
    <description><![CDATA[A - Determinant 题意 求二阶行列式 题解 1 2 3 4 5 6 7 8 9 #include &#34;bits/stdc++.h&#34; using namespace std; using ll = long long; int main() { int a, b, c, d; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d; cout &lt;&lt; a * d - c * b &lt;&lt; endl; return 0; } B - Quizzes 题意 给n]]></description>
</item><item>
    <title>今天你也要来点cmake吗</title>
    <link>https://dyhgo.github.io/%E4%BB%8A%E5%A4%A9%E4%BD%A0%E4%B9%9F%E8%A6%81%E6%9D%A5%E7%82%B9cmake%E5%90%97/</link>
    <pubDate>Tue, 06 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/%E4%BB%8A%E5%A4%A9%E4%BD%A0%E4%B9%9F%E8%A6%81%E6%9D%A5%E7%82%B9cmake%E5%90%97/</guid>
    <description><![CDATA[前言 很早就想写cmake，但是一直懒得写 今天也随便写点cmake 官方对cmake的解释 CMake is an open-source, cross-platform family of tools designed to build, test and package software. CMake is used to control the software compilation process using simple platform]]></description>
</item><item>
    <title>Codeforces Round #672 (Div. 2) A~D</title>
    <link>https://dyhgo.github.io/codeforces-round-672-div.-2-a~d/</link>
    <pubDate>Fri, 25 Sep 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/codeforces-round-672-div.-2-a~d/</guid>
    <description><![CDATA[A. Cubes Sorting 题意 对于一个数列，每次操作交换相邻的两个数，问是否需要达到n(n-1)/2次操作才可以让数列递增 题解 判断数列是否严格单调递减 1 2 3 4 5]]></description>
</item></channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>This is DYH</title>
        <link>https://dyhgo.github.io/</link>
        <description>这是一个网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 03 Oct 2025 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://dyhgo.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>gdb基础使用</title>
    <link>https://dyhgo.github.io/posts/gdb_quickstart/</link>
    <pubDate>Fri, 03 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/gdb_quickstart/</guid>
    <description><![CDATA[<h2 id="gdb安装">gdb安装</h2>
<p>Linux版本 CentOS Linux release 7.9.2009</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">yum install gdb
</span></span><span class="line"><span class="cl">gdb --version
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="基础命令简介">基础命令简介</h2>
<p>查看gdb的命令</p>
<p><code>man gdb</code></p>
<p>以下三种使用gdb调试的方式</p>
<p><code>gdb program</code> 调试可执行文件</p>
<p><code>gdb program core</code>  调试corefile</p>
<p><code>gdb -p 1234</code>  调试正在运行的程序，1234为pid</p>]]></description>
</item><item>
    <title>使用ASAN和Valgrind调试C&#43;&#43;内存问题</title>
    <link>https://dyhgo.github.io/posts/asan_valgrind/</link>
    <pubDate>Fri, 03 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/asan_valgrind/</guid>
    <description><![CDATA[<p>以下针对C++中常见的内存问题，使用Address Sanitizer和Valgrind进行调试</p>
<p>Linux环境 CentOS 7.9</p>
<h2 id="valgrind安装">Valgrind安装</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">yum install valgrind
</span></span><span class="line"><span class="cl">valgrind --version
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="asan安装">ASAN安装</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">yum install libasan
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="valgrind的使用">Valgrind的使用</h2>
<p>valgrind是一套工具集，最常用的工具是memcheck</p>]]></description>
</item><item>
    <title>panic, log.Fatal, os.Exit, runtime.Goexit的区别</title>
    <link>https://dyhgo.github.io/posts/golang_panic_fatal_exit/</link>
    <pubDate>Thu, 02 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/golang_panic_fatal_exit/</guid>
    <description><![CDATA[<p>panic()如果在本协程里没有recover捕获，则会异常终止程序</p>
<p>在本协程里没有recover，在别的协程中recover是捕获不到的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;fmt&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="s">&#34;time&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>	<span class="c1">// 捕获不到</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">r</span> <span class="o">:=</span> <span class="nb">recover</span><span class="p">();</span> <span class="nx">r</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Recovered in main&#34;</span><span class="p">,</span> <span class="nx">r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}()</span>
</span></span><span class="line"><span class="cl">	<span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">defer</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>	<span class="c1">// 能捕获到</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="nx">r</span> <span class="o">:=</span> <span class="nb">recover</span><span class="p">();</span> <span class="nx">r</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Recovered in f&#34;</span><span class="p">,</span> <span class="nx">r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}()</span>
</span></span><span class="line"><span class="cl">		<span class="nb">panic</span><span class="p">(</span><span class="s">&#34;hello world&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}()</span>
</span></span><span class="line"><span class="cl">	<span class="nx">time</span><span class="p">.</span><span class="nf">Sleep</span><span class="p">(</span><span class="mi">3</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>os.Exit()会立刻按退出码来终止程序，不会执行defer</p>]]></description>
</item><item>
    <title>软件工程6大原则</title>
    <link>https://dyhgo.github.io/posts/software_engineering_6_principles/</link>
    <pubDate>Thu, 02 Oct 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/software_engineering_6_principles/</guid>
    <description><![CDATA[<p>宗旨：高内聚、低耦合、好扩展、好维护</p>
<p>六大设计原则</p>
<ul>
<li>单一职责原则（Single Responsibility Principle, SRP）</li>
<li>开放封闭原则（Open-Closed Principle, OCP）</li>
<li>里氏替换原则（Liskov Substitution Principle, LSP）</li>
<li>接口隔离原则（Interface Segregation Principle, ISP）</li>
<li>依赖倒置原则（Dependency Inversion Principle, DIP）</li>
<li>迪米特法则（Law of Demeter, LoD）</li>
</ul>
<h2 id="单一职责原则single-responsibility-principle-srp">单一职责原则（Single Responsibility Principle, SRP）</h2>
<p>一个类或函数，只做一件事情</p>]]></description>
</item><item>
    <title>vim指令速查</title>
    <link>https://dyhgo.github.io/posts/vim/</link>
    <pubDate>Sun, 07 Sep 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/vim/</guid>
    <description><![CDATA[<p>vim有三种模式，命令模式（command line），输入模式（insert mode），命令行模式（command-line mode）
</p>]]></description>
</item><item>
    <title>广告基本术语</title>
    <link>https://dyhgo.github.io/posts/ad_terms/</link>
    <pubDate>Mon, 25 Aug 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/ad_terms/</guid>
    <description><![CDATA[<h2 id="角色">角色</h2>
<table>
  <thead>
      <tr>
          <th>角色</th>
          <th>作用</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>用户</td>
          <td>看广告</td>
      </tr>
      <tr>
          <td>流量主</td>
          <td>提供广告位</td>
      </tr>
      <tr>
          <td>广告主</td>
          <td>投放广告</td>
      </tr>
      <tr>
          <td>需求方平台DSP</td>
          <td>为广告主提供服务，相当于中介</td>
      </tr>
      <tr>
          <td>供给方平台SSP</td>
          <td>为流量主提供服务，相当于中介</td>
      </tr>
      <tr>
          <td>广告交易平台</td>
          <td>类似拍卖场，对接DSP和SSP，可以对广告位竞价</td>
      </tr>
      <tr>
          <td>数据管理平台</td>
          <td>对接DSP，拥有用户数据、画像、标签</td>
      </tr>
  </tbody>
</table>
<a class="lightgallery" href="/images/ad_terms/IMG792.jpg" title="/images/ad_terms/IMG792.jpg" data-thumbnail="/images/ad_terms/IMG792.jpg">
        
    </a>
<h2 id="指标">指标</h2>
<p>一般按某个广告位来讲</p>]]></description>
</item><item>
    <title>CS2游戏内设置对应指令</title>
    <link>https://dyhgo.github.io/posts/cs2_in_game_setting_command/</link>
    <pubDate>Sun, 13 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/cs2_in_game_setting_command/</guid>
    <description><![CDATA[<p>打游戏时突然蓝屏，然后电脑强制更新，重启后设置全变成默认。。。</p>
<p>为了后续方便在不同电脑上玩且在重装系统后能一键恢复设置，所以将原来的设置保存到cfg文件，最后加载cfg文件即可</p>]]></description>
</item><item>
    <title>balisong</title>
    <link>https://dyhgo.github.io/posts/balisong/</link>
    <pubDate>Wed, 26 Feb 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/balisong/</guid>
    <description><![CDATA[<h2 id="开刀">开刀</h2>
<ul>
<li>正手风车</li>
<li>正手快开</li>
<li>反手快开</li>
<li>八字开刀</li>
<li>垫指开刀</li>
<li>后甩开刀</li>
<li>tweak fan</li>
</ul>
<h2 id="绕指">绕指</h2>
<ul>
<li>y2k</li>
<li>反y2k</li>
<li>正反y2k</li>
<li>短停</li>
<li>食指 + 拇指 同向 正</li>
<li>食指 + 拇指 异向 反</li>
<li>阶梯</li>
<li>8ball</li>
<li>ufo</li>
<li>helix</li>
<li>食指无限转</li>
<li>拇指无限转</li>
<li>y3k</li>
<li>三指转</li>
<li>xo2</li>
<li>下平y2k</li>
<li>四指转</li>
<li>吻别</li>
<li>水平四指</li>
</ul>
<h2 id="搓柄">搓柄</h2>
<ul>
<li>正搓</li>
<li>反搓</li>
<li>下搓</li>
</ul>
<h2 id="抛接">抛接</h2>
<ul>
<li>颠刀</li>
<li>正手抛接</li>
<li>反手抛接</li>
</ul>
<h2 id="连招">连招</h2>
<ul>
<li>y2k + 8ball + ufo + helix</li>
<li>正搓 + 下搓 + 后甩 + 反搓</li>
<li>后甩 + 反搓</li>
<li>y2k + 正手抛接 + 绕指 + 八字收刀 + 8ball + ufo + helix + 颠刀 + 反手收刀 + 反搓 + xo2 + 四指转 + tweak fan</li>
</ul>]]></description>
</item><item>
    <title>装机</title>
    <link>https://dyhgo.github.io/posts/%E8%A3%85%E6%9C%BA/</link>
    <pubDate>Sun, 05 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/%E8%A3%85%E6%9C%BA/</guid>
    <description><![CDATA[<p>记录一下第一次装机，好玩，就是有点麻烦，特别是理线，而且我装了9把风扇，理线理到爆炸，最后还是一坨直接塞到看不见的地方得了</p>
<p>最后成功点亮，烤鸡</p>
<p>带灯的好，但是平时还是不要开了</p>]]></description>
</item><item>
    <title>hotcode</title>
    <link>https://dyhgo.github.io/posts/hotcode/</link>
    <pubDate>Fri, 20 Sep 2024 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://dyhgo.github.io/posts/hotcode/</guid>
    <description><![CDATA[<h2 id="912-排序数组"><a href="https://leetcode.cn/problems/sort-an-array/description/" target="_blank" rel="noopener noreffer">912. 排序数组</a></h2>
<h3 id="题意">题意</h3>
<h3 id="题解">题解</h3>
<p>改进版快排，针对数据重复问题，荷兰国旗问题
如果数据是有序的，直接随机洗牌就行</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">sortArray</span><span class="p">(</span><span class="nx">nums</span> <span class="p">[]</span><span class="kt">int</span><span class="p">)</span> <span class="p">[]</span><span class="kt">int</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">n</span> <span class="o">:=</span> <span class="nb">len</span><span class="p">(</span><span class="nx">nums</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">quickSort</span> <span class="kd">func</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">quickSort</span> <span class="p">=</span> <span class="kd">func</span><span class="p">(</span><span class="nx">nums</span> <span class="p">[]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">l</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">r</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">l</span> <span class="o">&gt;=</span> <span class="nx">r</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">return</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="nx">pivot</span> <span class="o">:=</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">l</span> <span class="o">+</span> <span class="nx">rand</span><span class="p">.</span><span class="nf">Intn</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span><span class="nx">l</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">		<span class="nx">samel</span><span class="p">,</span> <span class="nx">samer</span> <span class="o">:=</span> <span class="nx">l</span><span class="p">,</span> <span class="nx">r</span>
</span></span><span class="line"><span class="cl">		<span class="nx">cur</span> <span class="o">:=</span> <span class="nx">l</span>
</span></span><span class="line"><span class="cl">		<span class="k">for</span> <span class="nx">cur</span> <span class="o">&lt;=</span> <span class="nx">samer</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">cur</span><span class="p">]</span> <span class="p">&lt;</span> <span class="nx">pivot</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">nums</span><span class="p">[</span><span class="nx">cur</span><span class="p">],</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">samel</span><span class="p">]</span> <span class="p">=</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">samel</span><span class="p">],</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">cur</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">				<span class="nx">samel</span><span class="o">++</span>
</span></span><span class="line"><span class="cl">				<span class="nx">cur</span><span class="o">++</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">cur</span><span class="p">]</span> <span class="p">&gt;</span> <span class="nx">pivot</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">nums</span><span class="p">[</span><span class="nx">cur</span><span class="p">],</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">samer</span><span class="p">]</span> <span class="p">=</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">samer</span><span class="p">],</span> <span class="nx">nums</span><span class="p">[</span><span class="nx">cur</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">				<span class="nx">samer</span><span class="o">--</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">cur</span><span class="o">++</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="nf">quickSort</span><span class="p">(</span><span class="nx">nums</span><span class="p">,</span> <span class="nx">l</span><span class="p">,</span> <span class="nx">samel</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">quickSort</span><span class="p">(</span><span class="nx">nums</span><span class="p">,</span> <span class="nx">samer</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="nx">r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nf">quickSort</span><span class="p">(</span><span class="nx">nums</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nx">nums</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="103-二叉树的锯齿形层序遍历"><a href="https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal/description/" target="_blank" rel="noopener noreffer">103. 二叉树的锯齿形层序遍历</a></h2>
<h3 id="题意-1">题意</h3>
<h3 id="题解-1">题解</h3>
<p>和层序遍历差不多</p>]]></description>
</item></channel>
</rss>
